{-# LANGUAGE NoImplicitPrelude #-}
module Deka.Internal.Quad.Immutability where

import Deka.Internal.Quad.Tests.Util
import Deka.Internal.Quad.CtxFree
import Deka.Internal.Quad.Ctx hiding (unary, binary, ternary)
import Test.Tasty

tests :: TestTree
tests = testGroup "immutability - Quad"
  [ testGroup "abs" [unary abs]
  , testGroup "add" [binary add]
  , testGroup "and" [binary and]
  , testGroup "compare" [binary compare]
  , testGroup "compareSignal" [binary compareSignal]
  , testGroup "divide" [binary divide]
  , testGroup "divideInteger" [binary divideInteger]
  , testGroup "fma" [ternary fma]
  , testGroup "invert" [unary invert]
  , testGroup "logB" [unary logB]
  , testGroup "max" [binary max]
  , testGroup "maxMag" [binary maxMag]
  , testGroup "min" [binary min]
  , testGroup "minMag" [binary minMag]
  , testGroup "minus" [unary minus]
  , testGroup "multiply" [binary multiply]
  , testGroup "nextMinus" [unary nextMinus]
  , testGroup "nextPlus" [unary nextPlus]
  , testGroup "nextToward" [binary nextToward]
  , testGroup "or" [binary or]
  , testGroup "plus" [unary plus]
  , testGroup "quantize" [binary quantize]
  , testGroup "reduce" [unary reduce]
  , testGroup "remainder" [binary remainder]
  , testGroup "remainderNear" [binary remainderNear]
  , testGroup "rotate" [binary rotate]
  , testGroup "scaleB" [binary scaleB]
  , testGroup "shift" [binary shift]
  , testGroup "subtract" [binary subtract]
  , testGroup "toInt32" [rounded toInt32]
  , testGroup "toInt32Exact" [rounded toInt32Exact]
  , testGroup "toIntegralExact" [unary toIntegralExact]
  , testGroup "toIntegralValue" [rounded toIntegralValue]
  , testGroup "toUInt32" [rounded toUInt32]
  , testGroup "toUInt32Exact" [rounded toUInt32Exact]
  , testGroup "xor" [binary xor]
  , testGroup "decClass" [unaryCF decClass]
  , testGroup "isNaN" [unaryCF isNaN]
  , testGroup "compareOrd" [binaryCF compareOrd]
  , testGroup "compareTotalMag" [binaryCF compareTotalMag]
  , testGroup "copySign" [binaryCF copySign]
  , testGroup "digits" [unaryCF digits]
  , testGroup "isFinite" [unaryCF isFinite]
  , testGroup "isInfinite" [unaryCF isInfinite]
  , testGroup "isInteger" [unaryCF isInteger]
  , testGroup "isLogical" [unaryCF isLogical]
  , testGroup "isNormal" [unaryCF isNormal]
  , testGroup "isSignaling" [unaryCF isSignaling]
  , testGroup "isSigned" [unaryCF isSigned]
  , testGroup "isSubnormal" [unaryCF isSubnormal]
  , testGroup "sameQuantum" [binaryCF sameQuantum]
  , testGroup "toEngByteString" [unaryCF toEngByteString]
  , testGroup "toNumber" [unaryCF toNumber]
  ]
